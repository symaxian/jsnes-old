//JSNES by Jonathon Reesor, http://sweb.uky.edu/~jpre223/jsnes.html
nes={frameRate:60,frameInterval:null,fps:0,status:'Uninitialized.',mmc:null,rom:null,dynamicAudioPath:'',browserSupportsCanvas:function nes_browserSupportsCanvas(){var canvas=document.createElement('canvas');if(typeof canvas.getContext==='function'){var context=canvas.getContext('2d');if(typeof context==='object'){return true;}}
return false;},init:function nes_init(dynamicAudioPath){var screenDiv=document.getElementById('jsnes');if(screenDiv!==null){if(this.browserSupportsCanvas()){this.screen.init(screenDiv);this.dynamicAudioPath=dynamicAudioPath;this.controllers.init();this.reset();}
else{this.status='Error initializing emulator, your browser does not adequately support the canvas element needed for emulation.';}}
else{this.status='Error initializing emulator, division with id "jsnes" not found on the web page.';}},reset:function nes_reset(){this.stop();this.cpu.reset();this.ppu.reset();this.apu.reset();this.mmc=null;this.rom=null;this.status='Reset, ready to load a rom.';},start:function nes_start(){if(this.hasRom()){this.frameInterval=setInterval(function(){nes.frame();},1000/nes.frameRate);}},stop:function nes_stop(){clearInterval(this.frameInterval);this.status='Stopped.';},restart:function nes_restart(){this.stop();var romSource=this.rom.source;this.reset();this.loadRom(romSource);this.start();},frame:function nes_frame(){this.ppu.startFrame();var cycles=0;FRAMELOOP:for(;;){if(this.cpu.cyclesToHalt===0){cycles=this.cpu.emulate();this.apu.clockFrameCounter(cycles);cycles*=3;}
else if(this.cpu.cyclesToHalt<9){cycles=this.cpu.cyclesToHalt*3;this.apu.clockFrameCounter(this.cpu.cyclesToHalt);this.cpu.cyclesToHalt=0;}
else{cycles=24;this.apu.clockFrameCounter(8);this.cpu.cyclesToHalt-=8;}
for(;cycles>0;cycles--){if(this.ppu.curX===this.ppu.spr0HitX&&this.ppu.f_spVisibility===1&&this.ppu.scanline-21===this.ppu.spr0HitY){nes.cpu.mem[0x2002]|=64;}
if(this.ppu.requestEndFrame){this.ppu.nmiCounter--;if(this.ppu.nmiCounter===0){this.ppu.requestEndFrame=false;this.ppu.endFrame();break FRAMELOOP;}}
this.ppu.curX++;if(this.ppu.curX===341){this.ppu.curX=0;this.ppu.endScanline();}}}
var now=new Date().getTime();var frameDifference=this.lastFrameTime-now;this.fps=-1000/frameDifference;this.lastFrameTime=now;this.status='Running at '+this.fps.toFixed(2)+' FPS.';},hasRom:function nes_hasRom(){return this.rom!==null&&this.mmc!==null;},loadRom:function nes_loadRom(src){this.stop();var request=new XMLHttpRequest();request.open('GET',src,false);request.overrideMimeType('text/plain; charset=x-user-defined');try{request.send(null);}
catch(error){this.status='Error loading rom('+src+'), error retrieving rom file.';return false;}
var data=request.responseText;if(data.indexOf('NES\x1a')===0){var rom={};rom.header=new Array(16);for(var i=0;i<16;i++){rom.header[i]=data.charCodeAt(i)&0xFF;}
rom.romCount=rom.header[4];rom.vromCount=rom.header[5]*2;rom.mirroring=(rom.header[6]&1);rom.hasBatteryRam=(rom.header[6]&2)!==0;rom.trainer=(rom.header[6]&4)!==0;rom.fourScreen=(rom.header[6]&8)!==0;rom.mapperType=(rom.header[6]>>4)|(rom.header[7]&0xF0);for(var i=8;i<16;i++){if(rom.header[i]!==0){rom.mapperType&=0xF;}}
rom.rom=new Array(rom.romCount);var offset=16;for(var i=0;i<rom.romCount;i++){rom.rom[i]=new Array(16384);for(var j=0;j<16384;j++){if(offset+j>=data.length){break;}
rom.rom[i][j]=data.charCodeAt(offset+j)&0xFF;}
offset+=16384;}
rom.vrom=new Array(rom.vromCount);rom.vromTile=new Array(rom.vromCount);for(var i=0;i<rom.vromCount;i++){rom.vromTile[i]=new Array(256);for(var j=0;j<256;j++){rom.vromTile[i][j]=new Tile();}
rom.vrom[i]=new Array(4096);for(var j=0;j<4096;j++){if(offset+j>=data.length){break;}
rom.vrom[i][j]=data.charCodeAt(offset+j)&0xFF;}
offset+=4096;for(var j=0;j<4096;j++){if((j%16)<8){rom.vromTile[i][j>>4].setScanline(j%16,rom.vrom[i][j],rom.vrom[i][j+8]);}
else{rom.vromTile[i][j>>4].setScanline((j%16)-8,rom.vrom[i][j-8],rom.vrom[i][j]);}}}
this.reset();if(typeof this.mappers['mmc'+rom.mapperType]==='object'){this.rom=rom;rom.source=src;rom.name=src.substring(src.lastIndexOf('/')+1);rom.name=rom.name.substring(0,rom.name.lastIndexOf('.'));this.mmc=this.mappers['mmc'+rom.mapperType];this.mmc.loadROM();if(rom.fourScreen){this.ppu.setMirroring(2);}
else if(rom.mirroring===0){this.ppu.setMirroring(1);}
else{this.ppu.setMirroring(0);}
this.start();return true;}
this.status='Error loading rom('+src+'), rom uses a mapper currently unsupported by jsnes.';return false;}
this.status='Error loading rom('+src+'), rom file does not appear to be a valid NES rom.';return false;},loadBatteryRam:function nes_loadBatteryRam(){if(nes.rom.hasBatteryRam){if(this.hasSave(this.rom.name)){var data=this.getSave(this.rom.name);if(data.length===8192){for(var i=0;i++;i<8192){nes.cpu.mem[0x6000+i]=data.charCodeAt(i)-100;}}}}},saveBatteryRam:function nes_saveBatteryRam(){if(nes.rom.hasBatteryRam){var batteryRam='';for(var i=0x6000;i<0x8000;i++){batteryRam+=String.fromCharCode(nes.cpu.mem[i]+100);}
this.setSave(this.rom.name,batteryRam);}},hasSave:function nes_hasSave(name){return(window.name.split(';').indexOf(name)!==-1);},setSave:function nes_setSave(name,value){if(this.hasSave(name)){var data=window.name.split(';');data.pop();window.name='';data[data.indexOf(name)+1]=value;for(var i=0;i<data.length;i++){window.name+=data[i]+';';}}
else{window.name+=name+';'+value+';';}},getSave:function nes_getSave(name){if(this.hasSave(name)){var data=window.name.split(';');return data[data.indexOf(name)+1];}
return null;},clearSave:function nes_clearSave(name){var data=window.name.split(';');window.name='';if(data.indexOf(name)){data.splice(data.indexOf(name),2);}
for(var i=0;i++;i<data.length){window.name+=data[i]+';';}},clearSaves:function nes_clearSaves(){window.name='';},copyArrayElements:function nes_copyArrayElements(srcArray,srcPos,destArray,destPos,length){for(var i=0;i<length;++i){destArray[destPos+i]=srcArray[srcPos+i];}},copyObject:function nes_copyObject(object){var obj={};for(var item in object){obj[item]=object[item];}
return obj;},applyObject:function nes_applyObject(destObject,srcObject){for(var item in srcObject){destObject[item]=srcObject[item];}},screen:{canvas:null,context:null,imageData:null,pixelData:null,buffer:null,init:function nes_screen_init(container){this.canvas=document.createElement('canvas');container.appendChild(this.canvas);this.context=this.canvas.getContext('2d');this.canvas.width=256;this.canvas.height=240;this.canvas.style.border='1px solid black';this.context.fillStyle='black';this.context.fillRect(0,0,256,240);this.imageData=this.context.getImageData(0,0,256,240);this.pixelData=this.imageData.data;this.buffer=new Array(61440);},writeFrame:function nes_screen_writeFrame(buffer){for(var i=0;i<61440;i++){if(buffer[i]!==this.buffer[i]){var pixel=buffer[i];this.pixelData[i*4]=pixel&0xFF;this.pixelData[i*4+1]=(pixel>>8)&0xFF;this.pixelData[i*4+2]=(pixel>>16)&0xFF;this.buffer[i]=pixel;}}
this.context.putImageData(this.imageData,0,0);},},controllers:{state1:[64,64,64,64,64,64,64,64,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],state2:[64,64,64,64,64,64,64,64,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],keys1:[88,90,17,13,38,40,37,39,],keys2:[103,105,99,97,104,98,100,102,],init:function nes_controller(){document.onkeydown=function document_onkeydown(event){for(var i=0;i<nes.controllers.keys1.length;i++){if(event.keyCode===nes.controllers.keys1[i]){nes.controllers.state1[i]=65;break;}
else if(event.keyCode===nes.controllers.keys2[i]){nes.controllers.state2[i]=65;break;}}
if(event.keyCode>=37&&event.keyCode<=40){return false;}}
document.onkeyup=function document_onkeyup(event){for(var i=0;i<nes.controllers.keys1.length;i++){if(event.keyCode===nes.controllers.keys1[i]){nes.controllers.state1[i]=64;break;}
else if(event.keyCode===nes.controllers.keys2[i]){nes.controllers.state2[i]=64;break;}}}},},};nes.cpu={mem:null,REG_ACC:0,REG_X:0,REG_Y:0,REG_SP:0,REG_PC:0,F_SIGN:0,F_OVERFLOW:0,F_BRK:0,F_DECIMAL:0,F_INTERRUPT:0,F_ZERO:0,F_CARRY:0,interruptRequested:false,interruptType:0,cyclesToHalt:0,opInfo:[117506570,100796962,255,255,255,50462754,84017154,255,50397732,33686818,33620994,255,255,67306274,100860674,255,33685769,84020002,255,255,255,67241506,100795906,255,33620493,67307810,255,255,255,67307554,117639170,255,100860700,100796929,255,255,50462726,50462721,84017191,255,67174950,33686785,33621031,255,67306246,67306241,100860711,255,33685767,84019969,255,255,255,67241473,100795943,255,33620524,67307777,255,255,255,67307521,117639207,255,100729385,100796951,255,255,255,50462743,84017184,255,50397731,33686807,33621024,255,50529051,67306263,100860704,255,33685771,84019991,255,255,255,67241495,100795936,255,33620495,67307799,255,255,255,67307543,117639200,255,100729386,100796928,255,255,255,50462720,84017192,255,67174949,33686784,33621032,255,84085787,67306240,100860712,255,33685772,84019968,255,255,255,67241472,100795944,255,33620526,67307776,255,255,255,67307520,117639208,255,255,100796975,255,255,50462769,50462767,50462768,255,33620502,255,33620533,255,67306289,67306287,67306288,255,33685763,100797231,255,255,67241521,67241519,67241776,255,33620535,84085039,33620534,255,255,84084783,255,255,33686815,100796957,33686814,255,50462751,50462749,50462750,255,33620531,33686813,33620530,255,67306271,67306269,67306270,255,33685764,84019997,255,255,67241503,67241501,67241758,255,33620496,67307805,33620532,255,67307551,67307549,67307806,255,33686803,100796945,255,255,50462739,50462737,84017172,255,33620506,33686801,33620501,255,67306259,67306257,100860692,255,33685768,84019985,255,255,255,67241489,100795924,255,33620494,67307793,255,255,255,67307537,117639188,255,33686802,100796971,255,255,50462738,50462763,84017176,255,33620505,33686827,33620513,255,67306258,67306283,100860696,255,33685765,84020011,255,255,255,67241515,100795928,255,33620525,67307819,255,255,255,67307563,117639192,255],reset:function nes_cpu_reset(){this.mem=new Array(0x10000);for(var i=0;i<0x2000;i++){this.mem[i]=0xFF;}
for(var i=0;i<4;i++){this.mem[i*0x800+0x008]=0xF7;this.mem[i*0x800+0x009]=0xEF;this.mem[i*0x800+0x00A]=0xDF;this.mem[i*0x800+0x00F]=0xBF;}
for(var i=0x2001;i<0x10000;i++){this.mem[i]=0;}
this.REG_ACC=0;this.REG_X=0;this.REG_Y=0;this.REG_SP=0x01FF;this.REG_PC=0x7FFF;this.F_SIGN=0;this.F_OVERFLOW=0;this.F_BRK=1;this.F_DECIMAL=0;this.F_INTERRUPT=1;this.F_ZERO=1;this.F_CARRY=0;this.interruptRequested=false;this.interruptType=0;this.cyclesToHalt=0;},requestInterrupt:function nes_cpu_requestInterrupt(type){if(!this.interruptRequested&&type!==0){this.interruptRequested=true;this.interruptType=type;}},push:function nes_cpu_push(value){nes.mmc.write(this.REG_SP,value);this.REG_SP=0x0100|((this.REG_SP-1)&0xFF);},pull:function nes_cpu_pull(){this.REG_SP=0x0100|((this.REG_SP+1)&0xFF);return nes.mmc.load(this.REG_SP);},pushStatus:function nes_cpu_pushStatus(){this.push((this.F_SIGN<<7)|(this.F_OVERFLOW<<6)|32|(this.F_BRK<<4)|(this.F_DECIMAL<<3)|(this.F_INTERRUPT<<2)|((this.F_ZERO===0?1:0)<<1)|this.F_CARRY);},haltCycles:function nes_cpu_haltCycles(cycles){this.cyclesToHalt+=cycles;},emulate:function nes_cpu_emulate(){if(this.interruptRequested){switch(this.interruptType){case 0:{if(this.F_INTERRUPT===0){this.REG_PC++;this.push((this.REG_PC>>8)&0xFF);this.push(this.REG_PC&0xFF);this.pushStatus();this.F_INTERRUPT=1;this.F_BRK=0;this.REG_PC=(this.mem[0xFFFE]|(this.mem[0xFFFF]<<8))-1;}
break;}
case 1:{if((this.mem[0x2000]&128)!==0){this.REG_PC++;this.push((this.REG_PC>>8)&0xFF);this.push(this.REG_PC&0xFF);this.pushStatus();this.REG_PC=(this.mem[0xFFFA]|(this.mem[0xFFFB]<<8))-1;}
break;}
case 2:{this.REG_PC=(this.mem[0xFFFC]|(this.mem[0xFFFD]<<8))-1;break;}}
this.interruptRequested=false;}
var opinf=this.opInfo[this.mem[this.REG_PC+1]];var cycleCount=opinf>>24;var cycleAdd=0;var addrMode=(opinf>>8)&0xFF;var opaddr=this.REG_PC;this.REG_PC+=(opinf>>16)&0xFF;switch(addrMode){case 0:{var addr=this.mem[opaddr+2];break;}
case 1:{var addr=this.mem[opaddr+2];if(addr<0x80){addr+=this.REG_PC;}
else{addr+=this.REG_PC-256;}
break;}
case 2:{break;}
case 3:{var addr=nes.mmc.load16bit(opaddr+2);break;}
case 4:{var addr=this.REG_ACC;break;}
case 5:{var addr=this.REG_PC;break;}
case 6:{var addr=(this.mem[opaddr+2]+this.REG_X)&0xFF;break;}
case 7:{var addr=(this.mem[opaddr+2]+this.REG_Y)&0xFF;break;}
case 8:{var addr=nes.mmc.load16bit(opaddr+2);if((addr&0xFF00)!==((addr+this.REG_X)&0xFF00)){cycleAdd=1;}
addr+=this.REG_X;break;}
case 9:{var addr=nes.mmc.load16bit(opaddr+2);if((addr&0xFF00)!==((addr+this.REG_Y)&0xFF00)){cycleAdd=1;}
addr+=this.REG_Y;break;}
case 10:{var addr=this.mem[opaddr+2];if((addr&0xFF00)!==((addr+this.REG_X)&0xFF00)){cycleAdd=1;}
addr=nes.mmc.load16bit((addr+this.REG_X)&0xFF);break;}
case 11:{var addr=nes.mmc.load16bit(nes.mmc.load(opaddr+2));if((addr&0xFF00)!==((addr+this.REG_Y)&0xFF00)){cycleAdd=1;}
addr+=this.REG_Y;break;}
case 12:{var addr=nes.mmc.load16bit(opaddr+2);addr=nes.mmc.load(addr)+(nes.mmc.load((addr&0xFF00)|(((addr&0xFF)+1)&0xFF))<<8);break;}}
addr&=0xFFFF;switch(opinf&0xFF){case 0:{temp=this.REG_ACC+nes.mmc.load(addr)+this.F_CARRY;this.F_OVERFLOW=((!(((this.REG_ACC^nes.mmc.load(addr))&0x80)!==0)&&(((this.REG_ACC^temp)&0x80))!==0)?1:0);this.F_CARRY=temp>255?1:0;this.F_SIGN=(temp>>7)&1;this.F_ZERO=temp&0xFF;this.REG_ACC=temp&255;cycleCount+=cycleAdd;break;}
case 1:{this.REG_ACC=this.REG_ACC&nes.mmc.load(addr);this.F_SIGN=(this.REG_ACC>>7)&1;this.F_ZERO=this.REG_ACC;if(addrMode!==11){cycleCount+=cycleAdd;}
break;}
case 2:{if(addrMode===4){this.F_CARRY=(this.REG_ACC>>7)&1;this.REG_ACC=(this.REG_ACC<<1)&255;this.F_SIGN=(this.REG_ACC>>7)&1;this.F_ZERO=this.REG_ACC;}
else{var temp=nes.mmc.load(addr);this.F_CARRY=(temp>>7)&1;temp=(temp<<1)&255;this.F_SIGN=(temp>>7)&1;this.F_ZERO=temp;nes.mmc.write(addr,temp);}
break;}
case 3:{if(this.F_CARRY===0){cycleCount+=((opaddr&0xFF00)!==(addr&0xFF00)?2:1);this.REG_PC=addr;}
break;}
case 4:{if(this.F_CARRY===1){cycleCount+=((opaddr&0xFF00)!==(addr&0xFF00)?2:1);this.REG_PC=addr;}
break;}
case 5:{if(this.F_ZERO===0){cycleCount+=((opaddr&0xFF00)!==(addr&0xFF00)?2:1);this.REG_PC=addr;}
break;}
case 6:{var temp=nes.mmc.load(addr);this.F_SIGN=(temp>>7)&1;this.F_OVERFLOW=(temp>>6)&1;this.F_ZERO=temp&this.REG_ACC;break;}
case 7:{if(this.F_SIGN===1){cycleCount++;this.REG_PC=addr;}
break;}
case 8:{if(this.F_ZERO!==0){cycleCount+=((opaddr&0xFF00)!==(addr&0xFF00)?2:1);this.REG_PC=addr;}
break;}
case 9:{if(this.F_SIGN===0){cycleCount+=((opaddr&0xFF00)!==(addr&0xFF00)?2:1);this.REG_PC=addr;}
break;}
case 10:{this.REG_PC+=2;this.push((this.REG_PC>>8)&255);this.push(this.REG_PC&255);this.F_BRK=1;this.pushStatus();this.F_INTERRUPT=1;this.REG_PC=nes.mmc.load16bit(0xFFFE)-1;break;}
case 11:{if(this.F_OVERFLOW===0){cycleCount+=((opaddr&0xFF00)!==(addr&0xFF00)?2:1);this.REG_PC=addr;}
break;}
case 12:{if(this.F_OVERFLOW===1){cycleCount+=((opaddr&0xFF00)!==(addr&0xFF00)?2:1);this.REG_PC=addr;}
break;}
case 13:{this.F_CARRY=0;break;}
case 14:{this.F_DECIMAL=0;break;}
case 15:{this.F_INTERRUPT=0;break;}
case 16:{this.F_OVERFLOW=0;break;}
case 17:{temp=this.REG_ACC-nes.mmc.load(addr);this.F_CARRY=(temp>=0?1:0);this.F_SIGN=(temp>>7)&1;this.F_ZERO=temp&0xFF;cycleCount+=cycleAdd;break;}
case 18:{temp=this.REG_X-nes.mmc.load(addr);this.F_CARRY=(temp>=0?1:0);this.F_SIGN=(temp>>7)&1;this.F_ZERO=temp&0xFF;break;}
case 19:{temp=this.REG_Y-nes.mmc.load(addr);this.F_CARRY=(temp>=0?1:0);this.F_SIGN=(temp>>7)&1;this.F_ZERO=temp&0xFF;break;}
case 20:{temp=(nes.mmc.load(addr)-1)&0xFF;this.F_SIGN=(temp>>7)&1;this.F_ZERO=temp;nes.mmc.write(addr,temp);break;}
case 21:{this.REG_X=(this.REG_X-1)&0xFF;this.F_SIGN=(this.REG_X>>7)&1;this.F_ZERO=this.REG_X;break;}
case 22:{this.REG_Y=(this.REG_Y-1)&0xFF;this.F_SIGN=(this.REG_Y>>7)&1;this.F_ZERO=this.REG_Y;break;}
case 23:{this.REG_ACC=(nes.mmc.load(addr)^this.REG_ACC)&0xFF;this.F_SIGN=(this.REG_ACC>>7)&1;this.F_ZERO=this.REG_ACC;cycleCount+=cycleAdd;break;}
case 24:{temp=(nes.mmc.load(addr)+1)&0xFF;this.F_SIGN=(temp>>7)&1;this.F_ZERO=temp;nes.mmc.write(addr,temp);break;}
case 25:{this.REG_X=(this.REG_X+1)&0xFF;this.F_SIGN=(this.REG_X>>7)&1;this.F_ZERO=this.REG_X;break;}
case 26:{this.REG_Y=(this.REG_Y+1)&0xFF;this.F_SIGN=(this.REG_Y>>7)&1;this.F_ZERO=this.REG_Y;break;}
case 27:{this.REG_PC=addr-1;break;}
case 28:{this.push((this.REG_PC>>8)&255);this.push(this.REG_PC&255);this.REG_PC=addr-1;break;}
case 29:{this.REG_ACC=nes.mmc.load(addr);this.F_SIGN=(this.REG_ACC>>7)&1;this.F_ZERO=this.REG_ACC;cycleCount+=cycleAdd;break;}
case 30:{this.REG_X=nes.mmc.load(addr);this.F_SIGN=(this.REG_X>>7)&1;this.F_ZERO=this.REG_X;cycleCount+=cycleAdd;break;}
case 31:{this.REG_Y=nes.mmc.load(addr);this.F_SIGN=(this.REG_Y>>7)&1;this.F_ZERO=this.REG_Y;cycleCount+=cycleAdd;break;}
case 32:{if(addrMode===4){var temp=this.REG_ACC&0xFF;this.F_CARRY=temp&1;this.REG_ACC=temp>>1;}
else{var temp=nes.mmc.load(addr)&0xFF;this.F_CARRY=temp&1;nes.mmc.write(addr,temp>>1);}
this.F_SIGN=0;this.F_ZERO=temp>>1;break;}
case 33:{break;}
case 34:{temp=(nes.mmc.load(addr)|this.REG_ACC)&255;this.F_SIGN=(temp>>7)&1;this.F_ZERO=temp;this.REG_ACC=temp;if(addrMode!==11){cycleCount+=cycleAdd;}
break;}
case 35:{this.push(this.REG_ACC);break;}
case 36:{this.F_BRK=1;this.pushStatus();break;}
case 37:{this.REG_ACC=this.pull();this.F_SIGN=(this.REG_ACC>>7)&1;this.F_ZERO=this.REG_ACC;break;}
case 38:{temp=this.pull();this.F_SIGN=(temp>>7)&1;this.F_OVERFLOW=(temp>>6)&1;this.F_BRK=(temp>>4)&1;this.F_DECIMAL=(temp>>3)&1;this.F_INTERRUPT=(temp>>2)&1;this.F_ZERO=(((temp>>1)&1)===1)?0:1;this.F_CARRY=temp&1;break;}
case 39:{var add=this.F_CARRY;if(addrMode===4){var temp=((this.REG_ACC<<1)&0xFF)+add;this.F_CARRY=(this.REG_ACC>>7)&1;this.REG_ACC=temp;}
else{var temp=nes.mmc.load(addr);this.F_CARRY=(temp>>7)&1;temp=((temp<<1)&0xFF)+add;nes.mmc.write(addr,temp);}
this.F_SIGN=(temp>>7)&1;this.F_ZERO=temp;break;}
case 40:{if(addrMode===4){var temp=(this.REG_ACC>>1)+(this.F_CARRY<<7);this.F_CARRY=this.REG_ACC&1;this.REG_ACC=temp;}
else{var temp=nes.mmc.load(addr);var add=this.F_CARRY<<7;this.F_CARRY=temp&1;temp=(temp>>1)+add;nes.mmc.write(addr,temp);}
this.F_SIGN=(temp>>7)&1;this.F_ZERO=temp;break;}
case 41:{temp=this.pull();this.F_SIGN=(temp>>7)&1;this.F_OVERFLOW=(temp>>6)&1;this.F_BRK=(temp>>4)&1;this.F_DECIMAL=(temp>>3)&1;this.F_INTERRUPT=(temp>>2)&1
this.F_ZERO=((temp>>1)&1)===0?1:0;this.F_CARRY=temp&1;this.REG_PC=this.pull()+(this.pull()<<8);if(this.REG_PC===0xFFFF){return;}
this.REG_PC--;break;}
case 42:{this.REG_PC=this.pull()+(this.pull()<<8);if(this.REG_PC===0xFFFF){return;}
break;}
case 43:{temp=this.REG_ACC-nes.mmc.load(addr)-(1-this.F_CARRY);this.F_SIGN=(temp>>7)&1;this.F_ZERO=temp&0xFF;this.F_OVERFLOW=((((this.REG_ACC^temp)&0x80)!==0&&((this.REG_ACC^nes.mmc.load(addr))&0x80)!==0)?1:0);this.F_CARRY=(temp<0?0:1);this.REG_ACC=(temp&0xFF);if(addrMode!==11){cycleCount+=cycleAdd;}
break;}
case 44:{this.F_CARRY=1;break;}
case 45:{this.F_DECIMAL=1;break;}
case 46:{this.F_INTERRUPT=1;break;}
case 47:{nes.mmc.write(addr,this.REG_ACC);break;}
case 48:{nes.mmc.write(addr,this.REG_X);break;}
case 49:{nes.mmc.write(addr,this.REG_Y);break;}
case 50:{this.REG_X=this.REG_ACC;this.F_SIGN=(this.REG_ACC>>7)&1;this.F_ZERO=this.REG_ACC;break;}
case 51:{this.REG_Y=this.REG_ACC;this.F_SIGN=(this.REG_ACC>>7)&1;this.F_ZERO=this.REG_ACC;break;}
case 52:{this.REG_X=this.REG_SP-0x0100;this.F_SIGN=(this.REG_SP>>7)&1;this.F_ZERO=this.REG_X;break;}
case 53:{this.REG_ACC=this.REG_X;this.F_SIGN=(this.REG_X>>7)&1;this.F_ZERO=this.REG_X;break;}
case 54:{this.REG_SP=0x0100|((this.REG_X+0x0100)&0xFF);break;}
case 55:{this.REG_ACC=this.REG_Y;this.F_SIGN=(this.REG_Y>>7)&1;this.F_ZERO=this.REG_Y;break;}
default:{nes.stop();alert('Game crashed, invalid opcode('+opinf&0xFF+') at address 0x'+opaddr.toString(16)+'.');break;}}
return cycleCount;},};nes.ppu={vramMem:null,spriteMem:null,firstWrite:null,vramAddress:null,vramTmpAddress:null,vramBufferedReadValue:null,sramAddress:null,f_nmiOnVblank:null,f_spriteSize:null,f_bgPatternTable:null,f_spPatternTable:null,f_addrInc:null,f_nTblAddress:null,f_color:null,f_spVisibility:null,f_bgVisibility:null,f_spClipping:null,f_bgClipping:null,f_dispType:null,cntFV:null,cntVT:null,cntHT:null,cntV:null,cntH:null,regFV:null,regV:null,regH:null,regVT:null,regHT:null,regFH:null,regS:null,attrib:null,buffer:null,bgbuffer:null,pixRendered:null,scantile:null,scanline:null,lastRenderedScanline:null,curX:null,requestEndFrame:null,nmiCounter:null,validTileData:null,sprX:null,sprY:null,sprTile:null,sprCol:null,vertFlip:null,horiFlip:null,bgPriority:null,hitSpr0:null,spr0HitX:null,spr0HitY:null,imgPalette:null,sprPalette:null,ptTile:null,ntable1:null,nameTable:null,vramMirrorTable:null,clipToTvSize:true,reset:function ppu_reset(){this.vramMem=new Array(0x8000);for(var i=0;i<this.vramMem.length;i++){this.vramMem[i]=0;}
this.spriteMem=new Array(0x100);for(var i=0;i<this.spriteMem.length;i++){this.spriteMem[i]=0;}
this.vramAddress=null;this.vramTmpAddress=null;this.vramBufferedReadValue=0;this.firstWrite=true;this.sramAddress=0;this.f_nmiOnVblank=0;this.f_spriteSize=0;this.f_bgPatternTable=0;this.f_spPatternTable=0;this.f_addrInc=0;this.f_nTblAddress=0;this.f_color=0;this.f_spVisibility=0;this.f_bgVisibility=0;this.f_spClipping=0;this.f_bgClipping=0;this.f_dispType=0;this.cntFV=0;this.cntVT=0;this.cntHT=0;this.cntV=0;this.cntH=0;this.regFV=0;this.regV=0;this.regH=0;this.regVT=0;this.regHT=0;this.regFH=0;this.regS=0;this.attrib=new Array(32);this.buffer=new Array(61440);this.bgbuffer=new Array(61440);this.pixRendered=new Array(61440);this.requestEndFrame=false;this.validTileData=false;this.nmiCounter=0;this.scantile=new Array(32);this.scanline=0;this.lastRenderedScanline=19;this.curX=0;this.sprX=new Array(64);this.sprY=new Array(64);this.sprTile=new Array(64);this.sprCol=new Array(64);this.vertFlip=new Array(64);this.horiFlip=new Array(64);this.bgPriority=new Array(64);this.hitSpr0=false;this.spr0HitX=0;this.spr0HitY=0;this.sprPalette=new Array(16);this.imgPalette=new Array(16);this.ptTile=new Array(512);for(var i=0;i<512;i++){this.ptTile[i]=new Tile();}
this.ntable1=new Array(4);this.nameTable=new Array(4);this.nameTable[0]=new this.NameTable(32,32);this.nameTable[1]=new this.NameTable(32,32);this.nameTable[2]=new this.NameTable(32,32);this.nameTable[3]=new this.NameTable(32,32);this.vramMirrorTable=new Array(0x8000);for(var i=0;i<0x8000;i++){this.vramMirrorTable[i]=i;}
this.colorPalette.loadNTSCPalette();},setMirroring:function ppu_setMirroring(mirroring){this.triggerRendering();this.vramMirrorTable=new Array(0x8000);for(var i=0;i<0x8000;i++){this.vramMirrorTable[i]=i;}
this.defineMirrorRegion(0x3f20,0x3f00,0x20);this.defineMirrorRegion(0x3f40,0x3f00,0x20);this.defineMirrorRegion(0x3f80,0x3f00,0x20);this.defineMirrorRegion(0x3fc0,0x3f00,0x20);this.defineMirrorRegion(0x3000,0x2000,0xf00);this.defineMirrorRegion(0x4000,0x0000,0x4000);if(mirroring===1){this.ntable1[0]=this.ntable1[1]=0;this.ntable1[2]=this.ntable1[3]=1;this.defineMirrorRegion(0x2400,0x2000,0x400);this.defineMirrorRegion(0x2c00,0x2800,0x400);}
else if(mirroring===0){this.ntable1[0]=this.ntable1[2]=0;this.ntable1[1]=this.ntable1[3]=1;this.defineMirrorRegion(0x2800,0x2000,0x400);this.defineMirrorRegion(0x2c00,0x2400,0x400);}
else if(mirroring===3){this.ntable1[0]=this.ntable1[1]=this.ntable1[2]=this.ntable1[3]=0;this.defineMirrorRegion(0x2400,0x2000,0x400);this.defineMirrorRegion(0x2800,0x2000,0x400);this.defineMirrorRegion(0x2c00,0x2000,0x400);}
else if(mirroring===4){this.ntable1[0]=this.ntable1[1]=this.ntable1[2]=this.ntable1[3]=1;this.defineMirrorRegion(0x2400,0x2400,0x400);this.defineMirrorRegion(0x2800,0x2400,0x400);this.defineMirrorRegion(0x2c00,0x2400,0x400);}
else{this.ntable1[0]=0;this.ntable1[1]=1;this.ntable1[2]=2;this.ntable1[3]=3;}},defineMirrorRegion:function ppu_defineMirrorRegion(from,to,size){for(var i=0;i<size;i++){this.vramMirrorTable[from+i]=to+i;}},startFrame:function ppu_startFrame(){var bgColor=0x000000;if(this.f_dispType===0){bgColor=this.imgPalette[0];}
else{switch(this.f_color){case 1:bgColor=0x00FF00;break;case 2:bgColor=0xFF0000;break;case 4:bgColor=0x0000FF;break;}}
for(var i=0;i<61440;i++){this.buffer[i]=bgColor;this.pixRendered[i]=65;}},endFrame:function ppu_endFrame(){nes.cpu.requestInterrupt(1);if(this.lastRenderedScanline<259){this.renderFramePartially(260-this.lastRenderedScanline);}
if(this.clipToTvSize){for(var y=0;y<240;y++){for(var x=0;x<8;x++){this.buffer[(y<<8)+x]=0;this.buffer[(y<<8)+255-x]=0;}}
for(var y=0;y<8;y++){for(var x=0;x<256;x++){this.buffer[(y<<8)+x]=0;this.buffer[((239-y)<<8)+x]=0;}}}
else if(this.f_bgClipping===0||this.f_spClipping===0){for(var y=0;y<240;y++){for(var x=0;x<8;x++){this.buffer[(y<<8)+x]=0;}}}
nes.screen.writeFrame(this.buffer);this.lastRenderedScanline=19;},endScanline:function ppu_endScanline(){if(this.scanline>20&&this.scanline<261){if(this.f_bgVisibility===1){this.cntHT=this.regHT;this.cntH=this.regH;this.renderBgScanline(this.bgbuffer,this.scanline);if(!this.hitSpr0&&this.f_spVisibility===1){if(this.checkSprite0()){this.hitSpr0=true;}}
nes.mmc.clockIrqCounter();}
else if(this.f_spVisibility===1){nes.mmc.clockIrqCounter();}}
else if(this.scanline===20){nes.cpu.mem[0x2002]&=127;nes.cpu.mem[0x2002]&=191;this.hitSpr0=false;this.spr0HitX=-1;this.spr0HitY=-1;if(this.f_bgVisibility===1||this.f_spVisibility===1){this.cntFV=this.regFV;this.cntV=this.regV;this.cntH=this.regH;this.cntVT=this.regVT;this.cntHT=this.regHT;if(this.f_bgVisibility===1){this.renderBgScanline(this.buffer,20);}
this.checkSprite0();nes.mmc.clockIrqCounter();}}
else if(this.scanline===261){nes.cpu.mem[0x2002]|=128;this.requestEndFrame=true;this.nmiCounter=9;this.scanline=-1;}
this.scanline++;this.regsToAddress();this.cntsToAddress();},writeRegister:function(address,value){switch(address&7){case 0:nes.cpu.mem[0x2000]=value;this.triggerRendering();this.f_nmiOnVblank=(value>>7)&1;this.f_spriteSize=(value>>5)&1;this.f_bgPatternTable=(value>>4)&1;this.f_spPatternTable=(value>>3)&1;this.f_addrInc=(value>>2)&1;this.f_nTblAddress=value&3;this.regV=(value>>1)&1;this.regH=value&1;this.regS=(value>>4)&1;break;case 1:nes.cpu.mem[0x2001]=value;this.triggerRendering();this.f_color=(value>>5)&7;this.f_spVisibility=(value>>4)&1;this.f_bgVisibility=(value>>3)&1;this.f_spClipping=(value>>2)&1;this.f_bgClipping=(value>>1)&1;this.f_dispType=value&1;if(this.f_dispType===0){this.colorPalette.setEmphasis(this.f_color);}
this.updatePalettes();break;case 3:this.sramAddress=value;break;case 4:this.writeSpriteMem(this.sramAddress,value);this.sramAddress++;this.sramAddress%=0x100;break;case 5:this.triggerRendering();if(this.firstWrite){this.regHT=(value>>3)&31;this.regFH=value&7;this.firstWrite=false;}
else{this.regFV=value&7;this.regVT=(value>>3)&31;this.firstWrite=true;}
break;case 6:if(this.firstWrite){this.regFV=(value>>4)&3;this.regV=(value>>3)&1;this.regH=(value>>2)&1;this.regVT=(this.regVT&7)|((value&3)<<3);this.firstWrite=false;}
else{this.triggerRendering();this.regVT=(this.regVT&24)|((value>>5)&7);this.regHT=value&31;this.cntFV=this.regFV;this.cntV=this.regV;this.cntH=this.regH;this.cntVT=this.regVT;this.cntHT=this.regHT;this.checkSprite0(this.scanline);this.firstWrite=true;}
this.cntsToAddress();if(this.vramAddress<0x2000){nes.mmc.latchAccess(this.vramAddress);}
break;case 7:this.triggerRendering();this.cntsToAddress();this.regsToAddress();if(this.vramAddress<0x2000){this.vramMem[this.vramAddress]=value;if(this.vramAddress%16<8){this.ptTile[parseInt(this.vramAddress/16)].setScanline(this.vramAddress%16,value,this.vramMem[this.vramAddress+8]);}
else{this.ptTile[parseInt(this.vramAddress/16)].setScanline((this.vramAddress%16)-8,this.vramMem[this.vramAddress-8],value);}
nes.mmc.latchAccess(this.vramAddress);}
else if(this.vramAddress>=0x3f00&&this.vramAddress<0x3f20){if(this.vramAddress===0x3F00||this.vramAddress===0x3F10){this.vramMem[0x3F00]=value;this.vramMem[0x3F10]=value;}
else if(this.vramAddress===0x3F04||this.vramAddress===0x3F14){this.vramMem[0x3F04]=value;this.vramMem[0x3F14]=value;}
else if(this.vramAddress===0x3F08||this.vramAddress===0x3F18){this.vramMem[0x3F08]=value;this.vramMem[0x3F18]=value;}
else if(this.vramAddress===0x3F0C||this.vramAddress===0x3F1C){this.vramMem[0x3F0C]=value;this.vramMem[0x3F1C]=value;}
else{this.vramMem[this.vramAddress]=value;}
this.updatePalettes();}
else if(this.vramAddress<this.vramMirrorTable.length){var address=this.vramMirrorTable[this.vramAddress];this.vramMem[address]=value;if(address<0x23c0){this.nameTable[this.ntable1[0]].tile[address-0x2000]=value;this.checkSprite0();}
else if(address<0x2400){this.nameTable[this.ntable1[0]].writeAttrib(address-0x23c0,value);}
else if(address<0x27c0){this.nameTable[this.ntable1[1]].tile[address-0x2400]=value;this.checkSprite0();}
else if(address<0x2800){this.nameTable[this.ntable1[1]].writeAttrib(address-0x27c0,value);}
else if(address<0x2bc0){this.nameTable[this.ntable1[2]].tile[address-0x2800]=value;this.checkSprite0();}
else if(address<0x2c00){this.nameTable[this.ntable1[2]].writeAttrib(address-0x2bc0,value);}
else if(address<0x2fc0){this.nameTable[this.ntable1[3]].tile[address-0x2c00]=value;this.checkSprite0();}
else if(address<0x3000){this.nameTable[this.ntable1[3]].writeAttrib(address-0x2fc0,value);}}
this.vramAddress+=1+this.f_addrInc*31;this.regsFromAddress();this.cntsFromAddress();break;}},regsToAddress:function(){this.vramTmpAddress=(((((this.regFV&7)<<4)|((this.regV&1)<<3)|((this.regH&1)<<2)|((this.regVT>>3)&3))<<8)|(((this.regVT&7)<<5)|(this.regHT&31)))&0x7FFF;},cntsToAddress:function(){this.vramAddress=(((((this.cntFV&7)<<4)|((this.cntV&1)<<3)|((this.cntH&1)<<2)|((this.cntVT>>3)&3))<<8)|(((this.cntVT&7)<<5)|(this.cntHT&31)))&0x7FFF;},regsFromAddress:function(){var address=(this.vramTmpAddress>>8)&0xFF;this.regFV=(address>>4)&7;this.regV=(address>>3)&1;this.regH=(address>>2)&1;this.regVT=(this.regVT&7)|((address&3)<<3);var address=this.vramTmpAddress&0xFF;this.regVT=(this.regVT&24)|((address>>5)&7);this.regHT=address&31;},cntsFromAddress:function(){var address=(this.vramAddress>>8)&0xFF;this.cntFV=(address>>4)&3;this.cntV=(address>>3)&1;this.cntH=(address>>2)&1;this.cntVT=(this.cntVT&7)|((address&3)<<3);var address=this.vramAddress&0xFF;this.cntVT=(this.cntVT&24)|((address>>5)&7);this.cntHT=address&31;},triggerRendering:function(){if(this.scanline>20&&this.scanline<261){this.renderFramePartially(this.scanline-this.lastRenderedScanline-1);this.lastRenderedScanline=this.scanline-1;}},renderFramePartially:function(scanCount){var startScan=this.lastRenderedScanline-19;this.renderSpritesPartially(scanCount,true);if(this.f_bgVisibility===1){var endIndex=Math.min((startScan+scanCount)<<8,0xF000);for(var destIndex=startScan<<8;destIndex<endIndex;destIndex++){if(this.pixRendered[destIndex]>0xFF){this.buffer[destIndex]=this.bgbuffer[destIndex];}}}
this.renderSpritesPartially(scanCount,false);this.validTileData=false;},renderBgScanline:function(buffer,scanline){scanline-=20;var destIndex=(scanline<<8)-this.regFH;this.cntHT=this.regHT;this.cntH=this.regH;if(scanline<240&&(scanline-this.cntFV)>=0){var curNt=this.ntable1[2*this.cntV+this.cntH];var tscanoffset=this.cntFV<<3;for(var tile=0;tile<32;tile++){if(scanline>=0){if(!this.validTileData){this.scantile[tile]=this.ptTile[this.regS*256+this.nameTable[curNt].getTileIndex(this.cntHT,this.cntVT)];this.attrib[tile]=this.nameTable[curNt].getAttrib(this.cntHT,this.cntVT);}
var t=this.scantile[tile];var att=this.attrib[tile];var x=(tile<<3)-this.regFH;if(x>-8){if(x<0){destIndex-=x;var sx=-x;}
else{var sx=0;}
if(t.opaque[this.cntFV]){for(;sx<8;sx++){this.buffer[destIndex]=this.imgPalette[t.pixelColor[tscanoffset+sx]+att];this.pixRendered[destIndex]|=256;destIndex++;}}
else{for(;sx<8;sx++){var col=t.pixelColor[tscanoffset+sx];if(col!==0){buffer[destIndex]=this.imgPalette[col+att];this.pixRendered[destIndex]|=256;}
destIndex++;}}}}
this.cntHT++;if(this.cntHT===32){this.cntHT=0;this.cntH++;this.cntH%=2;}}
this.validTileData=true;}
this.cntFV++;if(this.cntFV===8){this.cntFV=0;this.cntVT++;if(this.cntVT===30){this.cntVT=0;this.cntV++;this.cntV%=2;}
else if(this.cntVT===32){this.cntVT=0;}
this.validTileData=false;}},renderSpritesPartially:function(scancount,bgPri){var startscan=this.lastRenderedScanline-19;if(this.f_spVisibility===1){if(this.f_spriteSize===0){for(var i=0;i<64;i++){if(this.bgPriority[i]===bgPri&&this.sprX[i]>=0&&this.sprX[i]<256&&this.sprY[i]+8>=startscan&&this.sprY[i]<startscan+scancount){if(this.sprY[i]<startscan){var srcy1=startscan-this.sprY[i]-1;}
else{var srcy1=0;}
if(this.sprY[i]+8>startscan+scancount){var srcy2=startscan+scancount-this.sprY[i]+1;}
else{var srcy2=8;}
if(this.f_spPatternTable===0){this.ptTile[this.sprTile[i]].render(srcy1,srcy2,1,i);}
else{this.ptTile[this.sprTile[i]+256].render(srcy1,srcy2,1,i);}}}}
else{for(var i=0;i<64;i++){if(this.bgPriority[i]===bgPri&&this.sprX[i]>=0&&this.sprX[i]<256&&this.sprY[i]+8>=startscan&&this.sprY[i]<startscan+scancount){var top=this.sprTile[i];if((top&1)!==0){top=this.sprTile[i]-1+256;}
if(this.sprY[i]<startscan){var srcy1=startscan-this.sprY[i]-1;}
else{var srcy1=0;}
if(this.sprY[i]+8>startscan+scancount){var srcy2=startscan+scancount-this.sprY[i];}
else{var srcy2=8;}
this.ptTile[top+(this.vertFlip[i]?1:0)].render(srcy1,srcy2,1,i);if(this.sprY[i]+8<startscan){var srcy1=startscan-(this.sprY[i]+9);}
else{var srcy1=0;}
if(this.sprY[i]+16>startscan+scancount){var srcy2=startscan+scancount-(this.sprY[i]+8);}
else{var srcy2=8;}
this.ptTile[top+(this.vertFlip[i]?0:1)].render(srcy1,srcy2,9,i);}}}}},checkSprite0:function(){var scanline=this.scanline;scanline-=20;this.spr0HitX=this.spr0HitY=-1;var x=this.sprX[0];var y=this.sprY[0]+1;if(this.f_spriteSize===0){if(y<=scanline&&y+8>scanline&&x>=-7&&x<256){var t=this.ptTile[this.sprTile[0]+this.f_spPatternTable*256];if(this.vertFlip[0]){var toffset=(7-scanline+y)*8;}
else{var toffset=(scanline-y)*8;}
var bufferIndex=scanline*256+x;if(this.horiFlip[0]){for(var i=7;i>=0;i--){if(x>=0&&x<256){if(bufferIndex>=0&&bufferIndex<61440&&this.pixRendered[bufferIndex]!==0){if(t.pixelColor[toffset+i]!==0){this.spr0HitX=bufferIndex%256;this.spr0HitY=scanline;return true;}}}
x++;bufferIndex++;}}
else{for(var i=0;i<8;i++){if(x>=0&&x<256){if(bufferIndex>=0&&bufferIndex<61440&&this.pixRendered[bufferIndex]!==0){if(t.pixelColor[toffset+i]!==0){this.spr0HitX=bufferIndex%256;this.spr0HitY=scanline;return true;}}}
x++;bufferIndex++;}}}}
else if(y<=scanline&&y+16>scanline&&x>=-7&&x<256){if(toffset<8){var t=this.ptTile[this.sprTile[0]+(this.vertFlip[0]?1:0)+((this.sprTile[0]&1)!==0?255:0)];if(this.vertFlip[0]){var toffset=15-scanline+y;}
else{var toffset=scanline-y;}}
else{var t=this.ptTile[this.sprTile[0]+(this.vertFlip[0]?0:1)+((this.sprTile[0]&1)!==0?255:0)];if(this.vertFlip[0]){var toffset=-scanline+y;}
else{var toffset=scanline-y-8;}}
toffset*=8;var bufferIndex=scanline*256+x;if(this.horiFlip[0]){for(var i=7;i>=0;i--){if(x>=0&&x<256){if(bufferIndex>=0&&bufferIndex<61440&&this.pixRendered[bufferIndex]!==0){if(t.pixelColor[toffset+i]!==0){this.spr0HitX=bufferIndex%256;this.spr0HitY=scanline;return true;}}}
x++;bufferIndex++;}}
else{for(var i=0;i<8;i++){if(x>=0&&x<256){if(bufferIndex>=0&&bufferIndex<61440&&this.pixRendered[bufferIndex]!==0){if(t.pixelColor[toffset+i]!==0){this.spr0HitX=bufferIndex%256;this.spr0HitY=scanline;return true;}}}
x++;bufferIndex++;}}}
return false;},updatePalettes:function(){if(this.f_dispType===0){for(var i=0;i<16;i++){this.imgPalette[i]=this.colorPalette.curTable[this.vramMem[0x3f00+i]];this.sprPalette[i]=this.colorPalette.curTable[this.vramMem[0x3f10+i]];}}
else{for(var i=0;i<16;i++){this.imgPalette[i]=this.colorPalette.curTable[this.vramMem[0x3f00+i]&48];this.sprPalette[i]=this.colorPalette.curTable[this.vramMem[0x3f10+i]&48];}}},writeSpriteMem:function(address,value){this.spriteMem[address]=value;var tIndex=parseInt(address/4);if(tIndex===0){this.checkSprite0();}
address%=4;if(address===0){this.sprY[tIndex]=value;}
else if(address===1){this.sprTile[tIndex]=value;}
else if(address===2){this.vertFlip[tIndex]=(value&0x80)!==0;this.horiFlip[tIndex]=(value&0x40)!==0;this.bgPriority[tIndex]=(value&0x20)!==0;this.sprCol[tIndex]=(value&3)<<2;}
else if(address===3){this.sprX[tIndex]=value;}},colorPalette:{curTable:[],emphTable:[],loadNTSCPalette:function nes_ppu_colorPalette_loadNTSCPalette(){this.makeTables([5395026,11796480,10485760,11599933,7602281,91,95,6208,12048,543240,26368,1196544,7153664,0,0,0,12899815,16728064,14421538,16729963,14090399,6818519,6588,21681,27227,35843,43776,2918400,10777088,0,0,0,16316664,16755516,16742785,16735173,16730354,14633471,4681215,46327,57599,58229,259115,7911470,15065624,7895160,0,0,16777215,16773822,16300216,16300248,16758527,16761855,13095423,10148607,8973816,8650717,12122296,16119980,16777136,16308472,0,0]);this.setEmphasis(0);},loadDefaultPalette:function nes_ppu_colorPalette_loadDefaultPalette(){this.makeTables([7697781,2562959,171,4653215,9371767,11206675,10944512,8325888,4402944,18176,20736,16151,1785695,0,0,0,12369084,29679,2309103,8585459,12517567,15138907,14363392,13324047,9138944,38656,43776,37691,33675,0,0,0,16777215,4177919,6264831,10980349,16219135,16742327,16742243,16751419,15974207,8639251,5234507,5830808,60379,0,0,0,16777215,11266047,13096959,14142463,16762879,16762843,16760755,16767915,16770979,14942115,11269055,11796431,10485747,0,0,0]);this.setEmphasis(0);},makeTables:function nes_ppu_colorPalette_makeTables(palette){for(var emph=0;emph<8;emph++){var rFactor=gFactor=bFactor=1;if(emph&1){rFactor=0.75;bFactor=0.75;}
if(emph&2){rFactor=0.75;gFactor=0.75;}
if(emph&4){gFactor=0.75;bFactor=0.75;}
this.emphTable[emph]=new Array(64);for(var i=0;i<64;i++){var color=palette[i];this.emphTable[emph][i]=(parseInt(((color>>16)&0xFF)*rFactor)<<16)|(parseInt(((color>>8)&0xFF)*gFactor)<<8)|parseInt((color&0xFF)*bFactor);}}},setEmphasis:function nes_ppu_colorPalette_setEmphasis(emph){this.curTable=this.emphTable[emph];},},};nes.ppu.NameTable=function nes_ppu_NameTable(width,height){this.width=width;this.tile=new Array(width*height);this.attrib=new Array(width*height);};nes.ppu.NameTable.prototype={getTileIndex:function nes_ppu_NameTable_getTileIndex(x,y){return this.tile[y*this.width+x];},getAttrib:function nes_ppu_NameTable_getAttrib(x,y){return this.attrib[y*this.width+x];},writeAttrib:function nes_ppu_NameTable_writeAttrib(index,value){var basex=(index%8)*4;var basey=parseInt(index/8)*4;for(var sqy=0;sqy<2;sqy++){for(var sqx=0;sqx<2;sqx++){var add=(value>>(2*(sqy*2+sqx)))&3;for(var y=0;y<2;y++){for(var x=0;x<2;x++){var tx=basex+sqx*2+x;var ty=basey+sqy*2+y;var attindex=ty*this.width+tx;this.attrib[ty*this.width+tx]=(add<<2)&12;}}}}},};Tile=function Tile(){this.pixelColor=new Array(64);this.opaque=new Array(8);};Tile.prototype={setScanline:function(scanline,b1,b2){var tIndex=scanline<<3;for(var x=0;x<8;x++){this.pixelColor[tIndex+x]=((b1>>(7-x))&1)+(((b2>>(7-x))&1)<<1);if(this.pixelColor[tIndex+x]===0){this.opaque[scanline]=false;}}},render:function(srcy1,srcy2,yAdd,spriteIndex){var srcx1=0;var srcx2=8;var dx=nes.ppu.sprX[spriteIndex];var dy=nes.ppu.sprY[spriteIndex]+yAdd;if(dx<-7||dx>=256||dy<-7||dy>=240){return;}
if(dx<0){srcx1-=dx;}
if(dx+srcx2>=256){srcx2=256-dx;}
if(dy<0){srcy1-=dy;}
if(dy+srcy2>=240){srcy2=240-dy;}
var screenIndex=dy*256+dx;if(nes.ppu.horiFlip[spriteIndex]){if(nes.ppu.vertFlip[spriteIndex]){var pixelIndex=63;for(var y=0;y<8;y++){for(var x=0;x<8;x++){if(x>=srcx1&&x<srcx2&&y>=srcy1&&y<srcy2){var colorIndex=this.pixelColor[pixelIndex];var tpri=nes.ppu.pixRendered[screenIndex];if(colorIndex!==0&&spriteIndex<=(tpri&0xFF)){nes.ppu.buffer[screenIndex]=nes.ppu.sprPalette[colorIndex+nes.ppu.sprCol[spriteIndex]];nes.ppu.pixRendered[screenIndex]=(tpri&0xF00)|spriteIndex;}}
screenIndex++;pixelIndex--;}
screenIndex+=248;}}
else{var pixelIndex=7;for(var y=0;y<8;y++){for(var x=0;x<8;x++){if(x>=srcx1&&x<srcx2&&y>=srcy1&&y<srcy2){var colorIndex=this.pixelColor[pixelIndex];var tpri=nes.ppu.pixRendered[screenIndex];if(colorIndex!==0&&spriteIndex<=(tpri&0xFF)){nes.ppu.buffer[screenIndex]=nes.ppu.sprPalette[colorIndex+nes.ppu.sprCol[spriteIndex]];nes.ppu.pixRendered[screenIndex]=(tpri&0xF00)|spriteIndex;}}
screenIndex++;pixelIndex--;}
screenIndex+=248;pixelIndex+=16;}}}
else if(nes.ppu.vertFlip[spriteIndex]){var pixelIndex=56;for(var y=0;y<8;y++){for(var x=0;x<8;x++){if(x>=srcx1&&x<srcx2&&y>=srcy1&&y<srcy2){var colorIndex=this.pixelColor[pixelIndex];var tpri=nes.ppu.pixRendered[screenIndex];if(colorIndex!==0&&spriteIndex<=(tpri&0xFF)){nes.ppu.buffer[screenIndex]=nes.ppu.sprPalette[colorIndex+nes.ppu.sprCol[spriteIndex]];nes.ppu.pixRendered[screenIndex]=(tpri&0xF00)|spriteIndex;}}
screenIndex++;pixelIndex++;}
screenIndex+=248;pixelIndex-=16;}}
else{var pixelIndex=0;for(var y=0;y<8;y++){for(var x=0;x<8;x++){if(x>=srcx1&&x<srcx2&&y>=srcy1&&y<srcy2){var colorIndex=this.pixelColor[pixelIndex];var tpri=nes.ppu.pixRendered[screenIndex];if(colorIndex!==0&&spriteIndex<=(tpri&0xFF)){nes.ppu.buffer[screenIndex]=nes.ppu.sprPalette[colorIndex+nes.ppu.sprCol[spriteIndex]];nes.ppu.pixRendered[screenIndex]=(tpri&0xF00)|spriteIndex;}}
screenIndex++;pixelIndex++;}
screenIndex+=248;}}},};nes.mappers={};nes.mappers.mmc0={joy1Strobe:0,joy2Strobe:0,joypadLastWrite:0,reset:function nes_mappers_mmc0reset(){this.joy1Strobe=0;this.joy2Strobe=0;this.joypadLastWrite=0;},load:function nes_mappers_mmc0load(address){if(address>0x4017){return nes.cpu.mem[address];}
if(address<0x2000){return nes.cpu.mem[address&0x7FF];}
return this.regLoad(address);},load16bit:function nes_mappers_mmc0load16Bit(address){return this.load(address)|(this.load(address+1)<<8);},write:function nes_mappers_mmc0write(address,value){if(address<0x2000){nes.cpu.mem[address&0x7FF]=value;}
else if(address<0x4000){nes.ppu.writeRegister(address,value);}
else if(address<0x4018){switch(address){case 0x4014:var baseAddress=value*0x100;var endAddress=nes.ppu.sramAddress+256;for(var i=nes.ppu.sramAddress;i<endAddress;i++){nes.ppu.writeSpriteMem(i,nes.cpu.mem[baseAddress+i]);}
nes.cpu.haltCycles(513);break;case 0x4015:nes.apu.writeReg(address,value);break;case 0x4016:if(value===0&&this.joypadLastWrite===1){this.joy1Strobe=0;this.joy2Strobe=0;}
this.joypadLastWrite=value;break;default:nes.apu.writeReg(address,value);}}
else{nes.cpu.mem[address]=value;}},regLoad:function nes_mappers_mmc0_regLoad(address){switch(address>>12){case 0:case 1:break;case 2:case 3:switch(address&7){case 0x0:return nes.cpu.mem[0x2000];case 0x1:return nes.cpu.mem[0x2001];case 0x2:nes.ppu.firstWrite=true;var tmp=nes.cpu.mem[0x2002];nes.cpu.mem[0x2002]&=127;return tmp;case 0x3:return 0;case 0x4:return nes.ppu.spriteMem[nes.ppu.sramAddress];case 0x5:return 0;case 0x6:return 0;case 0x7:nes.ppu.cntsToAddress();nes.ppu.regsToAddress();if(nes.ppu.vramAddress<=0x3EFF){var tmp=nes.ppu.vramBufferedReadValue;if(nes.ppu.vramAddress<0x2000){nes.ppu.vramBufferedReadValue=nes.ppu.vramMem[nes.ppu.vramAddress];nes.mmc.latchAccess(nes.ppu.vramAddress);}
else{nes.ppu.vramBufferedReadValue=nes.ppu.vramMem[nes.ppu.vramMirrorTable[nes.ppu.vramAddress]];}}
else{var tmp=nes.ppu.vramMem[nes.ppu.vramMirrorTable[nes.ppu.vramAddress]];}
nes.ppu.vramAddress+=1+nes.ppu.f_addrInc*31;nes.ppu.cntsFromAddress();nes.ppu.regsFromAddress();return tmp;}
break;case 4:switch(address){case 0x4015:return nes.apu.readReg();case 0x4016:var tmp=nes.controllers.state1[this.joy1Strobe];this.joy1Strobe++;if(this.joy1Strobe===24){this.joy1Strobe=0;}
return tmp;case 0x4017:var tmp=nes.controllers.state2[this.joy2Strobe];this.joy2Strobe++;if(this.joy2Strobe===24){this.joy2Strobe=0;}
return tmp;}
break;}
return 0;},loadROM:function nes_mappers_mmc0_loadROM(){if(nes.rom.romCount>1){this.load16kRomBank(0,0x8000);this.load16kRomBank(1,0xC000);}
else{this.load16kRomBank(0,0x8000);this.load16kRomBank(0,0xC000);}
this.loadCHRROM();nes.loadBatteryRam();nes.cpu.requestInterrupt(2);},loadCHRROM:function nes_mappers_mmc0_loadCHRROM(){if(nes.rom.vromCount>0){if(nes.rom.vromCount===1){this.load4kVromBank(0,0x0000);this.load4kVromBank(0,0x1000);}
else{this.load4kVromBank(0,0x0000);this.load4kVromBank(1,0x1000);}}},load8kRomBank:function nes_mappers_mmc0_load8kRomBank(bank,address){nes.copyArrayElements(nes.rom.rom[parseInt(bank/2,10)%nes.rom.romCount],(bank%2)*8192,nes.cpu.mem,address,8192);},load16kRomBank:function nes_mappers_mmc0_load16kRomBank(bank,address){nes.copyArrayElements(nes.rom.rom[bank%nes.rom.romCount],0,nes.cpu.mem,address,16384);},load32kRomBank:function nes_mappers_mmc0_load32kRomBank(bank,address){this.load16kRomBank(bank*2,address);this.load16kRomBank(bank*2+1,address+16384);},load1kVromBank:function nes_mappers_mmc0_load8kVromBank(bank,address){if(nes.rom.vromCount!==0){nes.ppu.triggerRendering();nes.copyArrayElements(nes.rom.vrom[parseInt(bank/4,10)%nes.rom.vromCount],0,nes.ppu.vramMem,(bank%4)*1024,1024);var vromTile=nes.rom.vromTile[bank4k];var baseIndex=address>>4;for(var i=0;i<64;i++){nes.ppu.ptTile[baseIndex+i]=vromTile[((bank%4)<<6)+i];}}},load2kVromBank:function nes_mappers_mmc0_load2kVromBank(bank,address){if(nes.rom.vromCount!==0){nes.ppu.triggerRendering();nes.copyArrayElements(nes.rom.vrom[parseInt(bank/2,10)%nes.rom.vromCount],(bank%2)*2048,nes.ppu.vramMem,address,2048);var vromTile=nes.rom.vromTile[bank4k];var baseIndex=address>>4;for(var i=0;i<128;i++){nes.ppu.ptTile[baseIndex+i]=vromTile[((bank%2)<<7)+i];}}},load4kVromBank:function nes_mappers_mmc0_load4kVromBank(bank,address){if(nes.rom.vromCount!==0){nes.ppu.triggerRendering();nes.copyArrayElements(nes.rom.vrom[bank%nes.rom.vromCount],0,nes.ppu.vramMem,address,4096);nes.copyArrayElements(nes.rom.vromTile[bank%nes.rom.vromCount],0,nes.ppu.ptTile,address>>4,256);}},load8kVromBank:function nes_mappers_mmc0_load8kVromBank(bankStart,address){if(nes.rom.vromCount!==0){nes.ppu.triggerRendering();this.load4kVromBank((bankStart)%nes.rom.vromCount,address);this.load4kVromBank((bankStart+1)%nes.rom.vromCount,address+4096);}},latchAccess:function nes_mappers_mmc0latchAccess(address){},clockIrqCounter:function nes_mappers_mmc0_clockIrqCounter(){},};nes.mappers.mmc1=nes.copyObject(nes.mappers.mmc0);nes.applyObject(nes.mappers.mmc1,{regBuffer:0,regBufferCounter:0,mirroring:0,prgSwitchingArea:1,prgSwitchingSize:1,vromSwitchingSize:0,romSelectionReg0:0,romSelectionReg1:0,reset:function nes_mappers_mmc1_reset(){nes.mappers.mmc0.reset.apply(this);this.regBuffer=0;this.regBufferCounter=0;this.mirroring=0;this.prgSwitchingArea=1;this.prgSwitchingSize=1;this.vromSwitchingSize=0;this.romSelectionReg0=0;this.romSelectionReg1=0;},write:function nes_mappers_mmc1_write(address,value){if(address<0x8000){return nes.mappers.mmc0.write.apply(this,arguments);}
if((value&128)!==0){this.regBufferCounter=0;this.regBuffer=0;if(this.getRegNumber(address)===0){this.prgSwitchingArea=1;this.prgSwitchingSize=1;}}
else{this.regBuffer=(this.regBuffer&(0xFF-(1<<this.regBufferCounter)))|((value&1)<<this.regBufferCounter);this.regBufferCounter++;if(this.regBufferCounter===5){this.setReg(this.getRegNumber(address),this.regBuffer);this.regBuffer=0;this.regBufferCounter=0;}}},setReg:function nes_mappers_mmc1_setReg(reg,value){switch(reg){case 0:if(value&3!==this.mirroring){this.mirroring=value&3;if((this.mirroring&2)===0){nes.ppu.setMirroring(3);}
else if((this.mirroring&1)!==0){nes.ppu.setMirroring(1);}
else{nes.ppu.setMirroring(0);}}
this.prgSwitchingArea=(value>>2)&1;this.prgSwitchingSize=(value>>3)&1;this.vromSwitchingSize=(value>>4)&1;break;case 1:this.romSelectionReg0=(value>>4)&1;if(nes.rom.vromCount>0){if(this.vromSwitchingSize===0){this.load8kVromBank((value&0xF)+(this.romSelectionReg0*parseInt(nes.rom.vromCount/2,10)),0x0000);}
else{this.load4kVromBank((value&0xF)+(this.romSelectionReg0*parseInt(nes.rom.vromCount/2,10)),0x0000);}}
break;case 2:this.romSelectionReg1=(value>>4)&1;if(nes.rom.vromCount>0){if(this.vromSwitchingSize===1){this.load4kVromBank((value&0xF)+(this.romSelectionReg1*parseInt(nes.rom.vromCount/2,10)),0x1000);}}
break;default:var baseBank=0;if(nes.rom.romCount>=32){if(this.vromSwitchingSize===0&&this.romSelectionReg0===1){baseBank=16;}
else{baseBank=(this.romSelectionReg0|(this.romSelectionReg1<<1))<<3;}}
else if(nes.rom.romCount>=16){if(this.romSelectionReg0===1){baseBank=8;}}
if(this.prgSwitchingSize===0){this.load32kRomBank(baseBank+(value&0xF),0x8000);}
else{this.load16kRomBank(baseBank*2+(value&0xF),0xC000-(this.prgSwitchingArea*0x4000));}}},getRegNumber:function nes_mappers_mmc1_getRegNumber(address){if(address>=0x8000&&address<=0x9FFF){return 0;}
if(address>=0xA000&&address<=0xBFFF){return 1;}
if(address>=0xC000&&address<=0xDFFF){return 2;}
return 3;},loadROM:function nes_mappers_mmc1_loadROM(rom){this.load16kRomBank(0,0x8000);this.load16kRomBank(nes.rom.romCount-1,0xC000);this.loadCHRROM();nes.loadBatteryRam();nes.cpu.requestInterrupt(2);},});nes.mappers.mmc2=nes.copyObject(nes.mappers.mmc0);nes.applyObject(nes.mappers.mmc2,{write:function nes_mappers_mmc2_write(address,value){if(address<0x8000){return nes.mappers.mmc0.write.apply(this,arguments);}
this.load16kRomBank(value,0x8000);},loadROM:function nes_mappers_mmc2_loadROM(){this.load16kRomBank(0,0x8000);this.load16kRomBank(nes.rom.romCount-1,0xC000);this.loadCHRROM();nes.cpu.requestInterrupt(2);},});nes.mappers.mmc4=nes.copyObject(nes.mappers.mmc0);nes.applyObject(nes.mappers.mmc4,{command:null,prgAddressSelect:null,chrAddressSelect:null,irqCounter:null,irqLatchValue:null,irqEnable:false,prgAddressChanged:false,write:function nes_mappers_mmc4_write(address,value){if(address<0x8000){return nes.mappers.mmc0.write.apply(this,arguments);}
switch(address){case 0x8000:this.command=value&7;if((value>>6)&1!==this.prgAddressSelect){this.prgAddressSelect=(value>>6)&1;this.prgAddressChanged=true;}
this.chrAddressSelect=(value>>7)&1;break;case 0x8001:this.executeCommand(this.command,value);break;case 0xA000:nes.ppu.setMirroring(value&1);break;case 0xA001:break;case 0xC000:this.irqCounter=value;break;case 0xC001:this.irqLatchValue=value;break;case 0xE000:this.irqEnable=0;break;case 0xE001:this.irqEnable=1;break;default:}},executeCommand:function nes_mappers_mmc4_executeCommand(command,argument){switch(command){case 0:this.load1kVromBank(argument,this.chrAddressSelect*0x1000);this.load1kVromBank(argument+1,0x0400+(this.chrAddressSelect*0x1000));break;case 1:this.load1kVromBank(argument,0x0800+(this.chrAddressSelect*0x1000));this.load1kVromBank(argument+1,0x0C00+(this.chrAddressSelect*0x1000));break;case 2:this.load1kVromBank(argument,this.chrAddressSelect*0x1000);break;case 3:this.load1kVromBank(argument,0x1400-(this.chrAddressSelect*0x1000));break;case 4:this.load1kVromBank(argument,0x1800-(this.chrAddressSelect*0x1000));break;case 5:this.load1kVromBank(argument,0x1C00-(this.chrAddressSelect*0x1000));break;case 6:if(this.prgAddressChanged){this.load8kRomBank(((nes.rom.romCount-1)*2),0xC000-(this.prgAddressSelect*0x4000));this.prgAddressChanged=false;}
this.load8kRomBank(argument,0x8000+(this.prgAddressSelect*0x4000));break;case 7:this.load8kRomBank(argument,0xA000);if(this.prgAddressChanged){this.load8kRomBank(((nes.rom.romCount-1)*2),0xC000-(this.prgAddressSelect*0x4000));this.prgAddressChanged=false;}
break;}},loadROM:function nes_mappers_mmc4_loadROM(){this.load8kRomBank(((nes.rom.romCount-1)*2),0xC000);this.load8kRomBank(((nes.rom.romCount-1)*2)+1,0xE000);this.load8kRomBank(0,0x8000);this.load8kRomBank(1,0xA000);this.loadCHRROM();nes.loadBatteryRam();nes.cpu.requestInterrupt(2);},});nes.apu={dynamicAudio:{writeInt:function(){}},active:false,square1:null,square2:null,triangle:null,noise:null,dmc:null,frameIrqEnabled:null,frameIrqActive:null,frameIrqCounter:null,frameIrqCounterMax:null,initCounter:null,initiatingHardware:null,bufferIndex:null,sampleBuffer:null,masterFrameCounter:null,derivedFrameCounter:null,countSequence:null,sampleTimer:null,frameTime:null,sampleTimerMax:null,sampleCount:null,triValue:null,smpSquare1:null,smpSquare2:null,smpTriangle:null,smpDmc:null,accCount:null,prevSampleL:0,prevSampleR:0,smpAccumL:0,smpAccumR:0,dacRange:0,dcValue:0,masterVolume:null,stereoPosLSquare1:null,stereoPosLSquare2:null,stereoPosLTriangle:null,stereoPosLNoise:null,stereoPosLDMC:null,stereoPosRSquare1:null,stereoPosRSquare2:null,stereoPosRTriangle:null,stereoPosRNoise:null,stereoPosRDMC:null,panning:[80,170,100,150,128],maxSample:null,minSample:null,lengthLookup:[0x0A,0xFE,0x14,0x02,0x28,0x04,0x50,0x06,0xA0,0x08,0x3C,0x0A,0x0E,0x0C,0x1A,0x0E,0x0C,0x10,0x18,0x12,0x30,0x14,0x60,0x16,0xC0,0x18,0x48,0x1A,0x10,0x1C,0x20,0x1E],dmcFreqLookup:[0xD60,0xBE0,0xAA0,0xA00,0x8F0,0x7F0,0x710,0x6B0,0x5F0,0x500,0x470,0x400,0x350,0x2A0,0x240,0x1B0],noiseWavelengthLookup:[0x004,0x008,0x010,0x020,0x040,0x060,0x080,0x0A0,0x0CA,0x0FE,0x17C,0x1FC,0x2FA,0x3F8,0x7F2,0xFE4],reset:function nes_apu_reset(){if(typeof nes.dynamicAudioPath==='string'&&nes.dynamicAudioPath!==''){this.dynamicAudio=new DynamicAudio({swf:nes.dynamicAudioPath});this.square1=new this.squareChannel(true);this.square2=new this.squareChannel(false);this.square1.reset();this.square2.reset();this.triangle.reset();this.noise.reset();this.dmc.reset();this.frameIrqEnabled=false;this.frameIrqActive=null;this.frameIrqCounter=null;this.frameIrqCounterMax=4;this.initCounter=2048;this.initiatingHardware=false;this.triValue=0;this.dacRange=0;this.dcValue=0;this.masterVolume=256;this.extraCycles=null;this.updateStereoPos();this.initDACtables();for(var i=0x4000;i<0x4014;i++){this.writeReg(i,0);}
this.writeReg(0x4010,0x10);this.sampleTimerMax=1832727040/44100;this.frameTime=parseInt((14915*nes.frameRate)/60,10);this.sampleTimer=0;this.updateChannelEnable(0);this.masterFrameCounter=0;this.derivedFrameCounter=4;this.countSequence=0;this.sampleCount=0;this.bufferIndex=0;this.sampleBuffer=new Array(16384);this.accCount=0;this.smpSquare1=0;this.smpSquare2=0;this.smpTriangle=0;this.smpDmc=0;this.prevSampleL=0;this.prevSampleR=0;this.smpAccumL=0;this.smpAccumR=0;this.maxSample=-500000;this.minSample=500000;}
else{this.active=false;}},readReg:function nes_apu_readReg(){var temp=(this.dmc.getIrqStatus()<<7)|(((this.frameIrqActive&&this.frameIrqEnabled)?1:0)<<6)|(this.getChannelLengthStatus(this.dmc)<<4)|(this.getChannelLengthStatus(this.noise)<<3)|(this.getChannelLengthStatus(this.triangle)<<2)|(this.getChannelLengthStatus(this.square2)<<1)|this.getChannelLengthStatus(this.square1);this.frameIrqActive=false;this.dmc.irqGenerated=false;return temp&0xFFFF;},writeReg:function nes_apu_writeReg(address,value){if(address>=0x4000&&address<0x4004){this.square1.writeReg(address,value);}
else if(address>=0x4004&&address<0x4008){this.square2.writeReg(address,value);}
else if(address>=0x4008&&address<0x400C){this.triangle.writeReg(address,value);}
else if(address>=0x400C&&address<=0x400F){this.noise.writeReg(address,value);}
else if(address===0x4010){this.dmc.writeReg(address,value);}
else if(address===0x4011){this.dmc.writeReg(address,value);}
else if(address===0x4012){this.dmc.writeReg(address,value);}
else if(address===0x4013){this.dmc.writeReg(address,value);}
else if(address===0x4015){this.updateChannelEnable(value);if(value!==0&&this.initCounter>0){this.initiatingHardware=true;}
this.dmc.writeReg(address,value);}
else if(address===0x4017){this.countSequence=(value>>7)&1;this.masterFrameCounter=0;this.frameIrqActive=false;this.frameIrqEnabled=(((value>>6)&0x1)===0);if(this.countSequence===0){this.frameIrqCounterMax=4;this.derivedFrameCounter=4;}
else{this.frameIrqCounterMax=5;this.derivedFrameCounter=0;this.frameCounterTick();}}},updateChannelEnable:function nes_apu_updateChannelEnable(value){this.square1.setEnabled((value&1)!==0);this.square2.setEnabled((value&2)!==0);this.triangle.setEnabled((value&4)!==0);this.noise.setEnabled((value&8)!==0);this.dmc.setEnabled((value&16)!==0);},clockFrameCounter:function nes_apu_clockFrameCounter(nCycles){if(this.active){if(this.initCounter>0&&this.initiatingHardware){this.initCounter-=nCycles;if(this.initCounter<=0){this.initiatingHardware=false;}
return;}
nCycles+=this.extraCycles;var maxCycles=this.sampleTimerMax-this.sampleTimer;if((nCycles<<10)>maxCycles){this.extraCycles=((nCycles<<10)-maxCycles)>>10;nCycles-=this.extraCycles;}
else{this.extraCycles=0;}
if(this.dmc.isEnabled){this.dmc.shiftCounter-=(nCycles<<3);while(this.dmc.shiftCounter<=0&&this.dmc.dmaFrequency>0){this.dmc.shiftCounter+=this.dmc.dmaFrequency;}}
if(this.triangle.progTimerMax>0){this.triangle.progTimerCount-=nCycles;while(this.triangle.progTimerCount<=0){this.triangle.progTimerCount+=this.triangle.progTimerMax+1;if(this.triangle.linearCounter>0&&this.triangle.lengthCounter>0){this.triangle.triangleCounter++;this.triangle.triangleCounter&=0x1F;if(this.triangle.isEnabled){if(this.triangle.triangleCounter>=0x10){this.triangle.sampleValue=(this.triangle.triangleCounter&0xF);}
else{this.triangle.sampleValue=(0xF-(this.triangle.triangleCounter&0xF));}
this.triangle.sampleValue<<=4;}}}}
this.square1.progTimerCount-=nCycles;if(this.square1.progTimerCount<=0){this.square1.progTimerCount+=(this.square1.progTimerMax+1)<<1;this.square1.squareCounter++;this.square1.squareCounter&=0x7;this.square1.updateSampleValue();}
this.square2.progTimerCount-=nCycles;if(this.square2.progTimerCount<=0){this.square2.progTimerCount+=(this.square2.progTimerMax+1)<<1;this.square2.squareCounter++;this.square2.squareCounter&=0x7;this.square2.updateSampleValue();}
var acc_c=nCycles;if(this.noise.progTimerCount-acc_c>0){this.noise.progTimerCount-=acc_c;this.noise.accCount+=acc_c;this.noise.accValue+=acc_c*this.noise.sampleValue;}
else{while((acc_c--)>0){if(--this.noise.progTimerCount<=0&&this.noise.progTimerMax>0){this.noise.shiftReg<<=1;this.noise.tmp=(((this.noise.shiftReg<<(this.noise.randomMode===0?1:6))^this.noise.shiftReg)&0x8000);if(this.noise.tmp!==0){this.noise.shiftReg|=0x01;this.noise.randomBit=0;this.noise.sampleValue=0;}
else{this.noise.randomBit=1;if(this.noise.isEnabled&&this.noise.lengthCounter>0){this.noise.sampleValue=this.noise.masterVolume;}
else{this.noise.sampleValue=0;}}
this.noise.progTimerCount+=this.noise.progTimerMax;}
this.noise.accValue+=this.noise.sampleValue;this.noise.accCount++;}}
if(this.frameIrqEnabled&&this.frameIrqActive){nes.cpu.requestIrq(0);}
this.masterFrameCounter+=(nCycles<<1);if(this.masterFrameCounter>=this.frameTime){this.masterFrameCounter-=this.frameTime;this.frameCounterTick();}
if(this.triangle.sampleCondition){this.triValue=Math.min(parseInt((this.triangle.progTimerCount<<4)/(this.triangle.progTimerMax+1),10),16);if(this.triangle.triangleCounter>=16){this.triValue=16-this.triValue;}
this.triValue+=this.triangle.sampleValue;}
if(nCycles===2){this.smpTriangle+=this.triValue<<1;this.smpDmc+=this.dmc.sample<<1;this.smpSquare1+=this.square1.sampleValue<<1;this.smpSquare2+=this.square2.sampleValue<<1;this.accCount+=2;}
else if(nCycles===4){this.smpTriangle+=this.triValue<<2;this.smpDmc+=this.dmc.sample<<2;this.smpSquare1+=this.square1.sampleValue<<2;this.smpSquare2+=this.square2.sampleValue<<2;this.accCount+=4;}
else{this.smpTriangle+=nCycles*this.triValue;this.smpDmc+=nCycles*this.dmc.sample;this.smpSquare1+=nCycles*this.square1.sampleValue;this.smpSquare2+=nCycles*this.square2.sampleValue;this.accCount+=nCycles;}
this.sampleTimer+=nCycles<<10;if(this.sampleTimer>=this.sampleTimerMax){this.sample();this.sampleTimer-=this.sampleTimerMax;}}},frameCounterTick:function nes_apu_frameCounterTick(){this.derivedFrameCounter++;if(this.derivedFrameCounter>=this.frameIrqCounterMax){this.derivedFrameCounter=0;}
if(this.derivedFrameCounter===1||this.derivedFrameCounter===3){this.triangle.clockLengthCounter();this.square1.clockLengthCounter();this.square2.clockLengthCounter();this.noise.clockLengthCounter();this.square1.clockSweep();this.square2.clockSweep();}
if(this.derivedFrameCounter>=0&&this.derivedFrameCounter<4){this.square1.clockEnvDecay();this.square2.clockEnvDecay();this.noise.clockEnvDecay();this.triangle.clockLinearCounter();}
if(this.derivedFrameCounter===3&&this.countSequence===0){this.frameIrqActive=true;}},sample:function nes_apu_sample(){if(this.accCount>0){this.smpSquare1<<=4;this.smpSquare1=parseInt(this.smpSquare1/this.accCount,10);this.smpSquare2<<=4;this.smpSquare2=parseInt(this.smpSquare2/this.accCount,10);this.smpTriangle=parseInt(this.smpTriangle/this.accCount,10);this.smpDmc<<=4;this.smpDmc=parseInt(this.smpDmc/this.accCount,10);this.accCount=0;}
else{this.smpSquare1=this.square1.sampleValue<<4;this.smpSquare2=this.square2.sampleValue<<4;this.smpTriangle=this.triangle.sampleValue;this.smpDmc=this.dmc.sample<<4;}
var smpNoise=parseInt((this.noise.accValue<<4)/this.noise.accCount,10);this.noise.accValue=smpNoise>>4;this.noise.accCount=1;var sq_index=(this.smpSquare1*this.stereoPosLSquare1+this.smpSquare2*this.stereoPosLSquare2)>>8;var tnd_index=(3*this.smpTriangle*this.stereoPosLTriangle+(smpNoise<<1)*this.stereoPosLNoise+this.smpDmc*this.stereoPosLDMC)>>8;if(sq_index>=this.square_table.length){sq_index=this.square_table.length-1;}
if(tnd_index>=this.tnd_table.length){tnd_index=this.tnd_table.length-1;}
var sampleValueL=this.square_table[sq_index]+this.tnd_table[tnd_index]-this.dcValue;sq_index=(this.smpSquare1*this.stereoPosRSquare1+this.smpSquare2*this.stereoPosRSquare2)>>8;tnd_index=(3*this.smpTriangle*this.stereoPosRTriangle+(smpNoise<<1)*this.stereoPosRNoise+this.smpDmc*this.stereoPosRDMC)>>8;if(sq_index>=this.square_table.length){sq_index=this.square_table.length-1;}
if(tnd_index>=this.tnd_table.length){tnd_index=this.tnd_table.length-1;}
var sampleValueR=this.square_table[sq_index]+this.tnd_table[tnd_index]-this.dcValue;var smpDiffL=sampleValueL-this.prevSampleL;this.prevSampleL+=smpDiffL;this.smpAccumL+=smpDiffL-(this.smpAccumL>>10);sampleValueL=this.smpAccumL;var smpDiffR=sampleValueR-this.prevSampleR;this.prevSampleR+=smpDiffR;this.smpAccumR+=smpDiffR-(this.smpAccumR>>10);sampleValueR=this.smpAccumR;if(sampleValueL>this.maxSample){this.maxSample=sampleValueL;}
if(sampleValueL<this.minSample){this.minSample=sampleValueL;}
this.sampleBuffer[this.bufferIndex++]=sampleValueL;this.sampleBuffer[this.bufferIndex++]=sampleValueR;if(this.bufferIndex===this.sampleBuffer.length){this.dynamicAudio.writeInt(this.sampleBuffer);this.sampleBuffer=new Array(16384);this.bufferIndex=0;}
this.smpSquare1=0;this.smpSquare2=0;this.smpTriangle=0;this.smpDmc=0;},getLengthMax:function nes_apu_getLengthMax(value){return this.lengthLookup[value>>3];},getDmcFrequency:function nes_apu_getDmcFrequency(value){if(value>=0&&value<0x10){return this.dmcFreqLookup[value];}
return 0;},getNoiseWaveLength:function nes_apu_getNoiseWaveLength(value){if(value>=0&&value<0x10){return this.noiseWavelengthLookup[value];}
return 0;},setMasterVolume:function nes_apu_setMasterVolume(value){if(value<0){value=0;}
if(value>256){value=256;}
this.masterVolume=value;this.updateStereoPos();},updateStereoPos:function nes_apu_updateSteroPos(){this.stereoPosLSquare1=(this.panning[0]*this.masterVolume)>>8;this.stereoPosLSquare2=(this.panning[1]*this.masterVolume)>>8;this.stereoPosLTriangle=(this.panning[2]*this.masterVolume)>>8;this.stereoPosLNoise=(this.panning[3]*this.masterVolume)>>8;this.stereoPosLDMC=(this.panning[4]*this.masterVolume)>>8;this.stereoPosRSquare1=this.masterVolume-this.stereoPosLSquare1;this.stereoPosRSquare2=this.masterVolume-this.stereoPosLSquare2;this.stereoPosRTriangle=this.masterVolume-this.stereoPosLTriangle;this.stereoPosRNoise=this.masterVolume-this.stereoPosLNoise;this.stereoPosRDMC=this.masterVolume-this.stereoPosLDMC;},initDACtables:function nes_apu_initDACtables(){var max_sqr=0;this.square_table=new Array(512);for(var i=0;i<512;i++){value=95.52/(8128/(i/16)+100);value*=0.98411;value*=50000;var ival=parseInt(value,10);this.square_table[i]=ival;if(ival>max_sqr){max_sqr=ival;}}
var max_tnd=0;this.tnd_table=new Array(3264);for(var i=0;i<3264;i++){var value=163.67/(24329/(i/16)+100);value*=0.98411;value*=50000;ival=parseInt(value,10);this.tnd_table[i]=ival;if(ival>max_tnd){max_tnd=ival;}}
this.dacRange=max_sqr+max_tnd;this.dcValue=this.dacRange/2;},getChannelLengthStatus:function nes_apu_getChannelLengthStatus(channel){return((channel.lengthCounter===0||!channel.isEnabled)?0:1);},dmc:{isEnabled:null,hasSample:null,irqGenerated:false,playMode:null,dmaFrequency:null,dmaCounter:null,deltaCounter:null,playStartAddress:null,playAddress:null,playLength:null,playLengthCounter:null,shiftCounter:null,reg4012:null,reg4013:null,sample:null,dacLsb:null,data:null,reset:function(){this.isEnabled=false;this.irqGenerated=false;this.playMode=0;this.dmaFrequency=0;this.dmaCounter=0;this.deltaCounter=0;this.playStartAddress=0;this.playAddress=0;this.playLength=0;this.playLengthCounter=0;this.sample=0;this.dacLsb=0;this.shiftCounter=0;this.reg4012=0;this.reg4013=0;this.data=0;},clockDmc:function(){if(this.hasSample){if((this.data&1)===0){if(this.deltaCounter>0){this.deltaCounter--;}}
else{if(this.deltaCounter<63){this.deltaCounter++;}}
this.sample=this.isEnabled?(this.deltaCounter<<1)+this.dacLsb:0;this.data>>=1;}
this.dmaCounter--;if(this.dmaCounter<=0){this.hasSample=false;if(this.playLengthCounter===0&&this.playMode===1){this.playAddress=this.playStartAddress;this.playLengthCounter=this.playLength;}
if(this.playLengthCounter>0){this.data=nes.mmc.load(this.playAddress);nes.cpu.haltCycles(4);this.playLengthCounter--;this.playAddress++;if(this.playAddress>0xFFFF){this.playAddress=0x8000;}
this.hasSample=true;if(this.playLengthCounter===0){if(this.playMode===2){this.irqGenerated=true;}}}
this.dmaCounter=8;}
if(this.irqGenerated){nes.cpu.requestIrq(0);}},writeReg:function(address,value){if(address===0x4010){if((value>>6)===0){this.playMode=0;}
else if(((value>>6)&1)===1){this.playMode=1;}
else if((value>>6)===2){this.playMode=2;this.irqGenerated=false;}
this.dmaFrequency=nes.apu.getDmcFrequency(value&0xF);}
else if(address===0x4011){this.deltaCounter=(value>>1)&63;this.dacLsb=value&1;this.sample=((this.deltaCounter<<1)+this.dacLsb);}
else if(address===0x4012){this.playStartAddress=(value<<6)|0x0C000;this.playAddress=this.playStartAddress;this.reg4012=value;}
else if(address===0x4013){this.playLength=(value<<4)+1;this.playLengthCounter=this.playLength;this.reg4013=value;}
else if(address===0x4015){if(((value>>4)&1)===0){this.playLengthCounter=0;}
else{this.playAddress=this.playStartAddress;this.playLengthCounter=this.playLength;}
this.irqGenerated=false;}},setEnabled:function(value){if((!this.isEnabled)&&value){this.playLengthCounter=this.playLength;}
this.isEnabled=value;},getIrqStatus:function(){return(this.irqGenerated?1:0);},},noise:{isEnabled:null,envDecayDisable:null,envDecayLoopEnable:null,lengthCounterEnable:null,envReset:null,lengthCounter:null,progTimerCount:null,progTimerMax:null,envDecayRate:null,envDecayCounter:null,envVolume:null,masterVolume:null,shiftReg:16384,randomBit:null,randomMode:null,sampleValue:null,accValue:0,accCount:1,tmp:null,reset:function(){this.progTimerCount=0;this.progTimerMax=0;this.isEnabled=false;this.lengthCounter=0;this.lengthCounterEnable=false;this.envDecayDisable=false;this.envDecayLoopEnable=false;this.envDecayRate=0;this.envDecayCounter=0;this.envVolume=0;this.masterVolume=0;this.shiftReg=1;this.randomBit=0;this.randomMode=0;this.sampleValue=0;this.tmp=0;},clockLengthCounter:function(){if(this.lengthCounterEnable&&this.lengthCounter>0){this.lengthCounter--;if(this.lengthCounter===0){this.updateSampleValue();}}},clockEnvDecay:function(){if(this.envReset){this.envReset=false;this.envDecayCounter=this.envDecayRate+1;this.envVolume=0xF;}
else if(--this.envDecayCounter<=0){this.envDecayCounter=this.envDecayRate+1;if(this.envVolume>0){this.envVolume--;}
else{this.envVolume=this.envDecayLoopEnable?0xF:0;}}
this.masterVolume=this.envDecayDisable?this.envDecayRate:this.envVolume;this.updateSampleValue();},updateSampleValue:function(){if(this.isEnabled&&this.lengthCounter>0){this.sampleValue=this.randomBit*this.masterVolume;}},writeReg:function(address,value){if(address===0x400C){this.envDecayDisable=((value&0x10)!==0);this.envDecayRate=value&0xF;this.envDecayLoopEnable=((value&0x20)!==0);this.lengthCounterEnable=((value&0x20)===0);this.masterVolume=this.envDecayDisable?this.envDecayRate:this.envVolume;}
else if(address===0x400E){this.progTimerMax=nes.apu.getNoiseWaveLength(value&0xF);this.randomMode=value>>7;}
else if(address===0x400F){this.lengthCounter=nes.apu.getLengthMax(value&248);this.envReset=true;}
this.updateSampleValue();},setEnabled:function(value){this.isEnabled=value;if(!value){this.lengthCounter=0;}
this.updateSampleValue();},},triangle:{isEnabled:null,sampleCondition:null,lengthCounterEnable:null,lcHalt:null,lcControl:null,progTimerCount:null,progTimerMax:null,triangleCounter:null,lengthCounter:null,linearCounter:null,lcLoadValue:null,sampleValue:null,reset:function(){this.progTimerCount=0;this.progTimerMax=0;this.triangleCounter=0;this.isEnabled=false;this.sampleCondition=false;this.lengthCounter=0;this.lengthCounterEnable=false;this.linearCounter=0;this.lcLoadValue=0;this.lcHalt=true;this.lcControl=false;this.sampleValue=0xF;},clockLengthCounter:function(){if(this.lengthCounterEnable&&this.lengthCounter>0){this.lengthCounter--;if(this.lengthCounter===0){this.updateSampleCondition();}}},clockLinearCounter:function(){if(this.lcHalt){this.linearCounter=this.lcLoadValue;this.updateSampleCondition();}
else if(this.linearCounter>0){this.linearCounter--;this.updateSampleCondition();}
if(!this.lcControl){this.lcHalt=false;}},writeReg:function(address,value){if(address===0x4008){this.lcControl=(value&0x80)!==0;this.lcLoadValue=value&0x7F;this.lengthCounterEnable=!this.lcControl;}
else if(address===0x400A){this.progTimerMax&=0x700;this.progTimerMax|=value;}
else if(address===0x400B){this.progTimerMax&=0xFF;this.progTimerMax|=((value&0x07)<<8);this.lengthCounter=nes.apu.getLengthMax(value&0xF8);this.lcHalt=true;}
this.updateSampleCondition();},clockProgrammableTimer:function(nCycles){if(this.progTimerMax>0){this.progTimerCount+=nCycles;while(this.progTimerMax>0&&this.progTimerCount>=this.progTimerMax){this.progTimerCount-=this.progTimerMax;if(this.isEnabled&&this.lengthCounter>0&&this.linearCounter>0){this.clockTriangleGenerator();}}}},clockTriangleGenerator:function(){this.triangleCounter++;this.triangleCounter&=0x1F;},setEnabled:function(value){this.isEnabled=value;if(!value){this.lengthCounter=0;}},updateSampleCondition:function(){this.sampleCondition=this.isEnabled&&this.progTimerMax>7&&this.linearCounter>0&&this.lengthCounter>0;},},};nes.apu.squareChannel=function(square1){this.dutyLookup=[0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,1,1,0,0,0,1,0,0,1,1,1,1,1];this.impLookup=[1,-1,0,0,0,0,0,0,1,0,-1,0,0,0,0,0,1,0,0,0,-1,0,0,0,-1,0,1,0,0,0,0,0];this.sqr1=square1;this.isEnabled=null;this.lengthCounterEnable=null;this.sweepActive=null;this.envDecayDisable=null;this.envDecayLoopEnable=null;this.envReset=null;this.updateSweepPeriod=null;this.progTimerCount=null;this.progTimerMax=null;this.lengthCounter=null;this.squareCounter=null;this.sweepCounter=null;this.sweepCounterMax=null;this.sweepMode=null;this.sweepShiftAmount=null;this.envDecayRate=null;this.envDecayCounter=null;this.envVolume=null;this.masterVolume=null;this.dutyMode=null;this.sampleValue=null;this.reset();};nes.apu.squareChannel.prototype={reset:function(){this.progTimerCount=0;this.progTimerMax=0;this.lengthCounter=0;this.squareCounter=0;this.sweepCounter=0;this.sweepCounterMax=0;this.sweepMode=0;this.sweepShiftAmount=0;this.envDecayRate=0;this.envDecayCounter=0;this.envVolume=0;this.masterVolume=0;this.dutyMode=0;this.isEnabled=false;this.lengthCounterEnable=false;this.sweepActive=false;this.envDecayDisable=false;this.envDecayLoopEnable=false;},clockLengthCounter:function(){if(this.lengthCounterEnable&&this.lengthCounter>0){this.lengthCounter--;if(this.lengthCounter===0){this.updateSampleValue();}}},clockEnvDecay:function(){if(this.envReset){this.envReset=false;this.envDecayCounter=this.envDecayRate+1;this.envVolume=0xF;}
else if((--this.envDecayCounter)<=0){this.envDecayCounter=this.envDecayRate+1;if(this.envVolume>0){this.envVolume--;}
else{this.envVolume=this.envDecayLoopEnable?0xF:0;}}
this.masterVolume=this.envDecayDisable?this.envDecayRate:this.envVolume;this.updateSampleValue();},clockSweep:function(){if(--this.sweepCounter<=0){this.sweepCounter=this.sweepCounterMax+1;if(this.sweepActive&&this.sweepShiftAmount>0&&this.progTimerMax>7){if(this.sweepMode===0){this.progTimerMax+=(this.progTimerMax>>this.sweepShiftAmount);if(this.progTimerMax>4095){this.progTimerMax=4095;}}
else{this.progTimerMax=this.progTimerMax-((this.progTimerMax>>this.sweepShiftAmount)-(this.sqr1?1:0));}}}
if(this.updateSweepPeriod){this.updateSweepPeriod=false;this.sweepCounter=this.sweepCounterMax+1;}},updateSampleValue:function(){if((this.isEnabled&&this.lengthCounter>0&&this.progTimerMax>7)&&!(this.sweepMode===0&&(this.progTimerMax+(this.progTimerMax>>this.sweepShiftAmount))>4095)){this.sampleValue=this.masterVolume*this.dutyLookup[(this.dutyMode<<3)+this.squareCounter];}
else{this.sampleValue=0;}},writeReg:function(address,value){var addrAdd=(this.sqr1?0:4);if(address===0x4000+addrAdd){this.envDecayDisable=((value&0x10)!==0);this.envDecayRate=value&0xF;this.envDecayLoopEnable=((value&0x20)!==0);this.dutyMode=(value>>6)&0x3;this.lengthCounterEnable=((value&0x20)===0);this.masterVolume=this.envDecayDisable?this.envDecayRate:this.envVolume;this.updateSampleValue();}
else if(address===0x4001+addrAdd){this.sweepActive=((value&0x80)!==0);this.sweepCounterMax=((value>>4)&7);this.sweepMode=(value>>3)&1;this.sweepShiftAmount=value&7;this.updateSweepPeriod=true;}
else if(address===0x4002+addrAdd){this.progTimerMax&=0x700;this.progTimerMax|=value;}
else if(address===0x4003+addrAdd){this.progTimerMax&=0xFF;this.progTimerMax|=((value&0x7)<<8);if(this.isEnabled){this.lengthCounter=nes.apu.getLengthMax(value&0xF8);}
this.envReset=true;}},setEnabled:function(value){this.isEnabled=value;if(!value){this.lengthCounter=0;}
this.updateSampleValue();},};
